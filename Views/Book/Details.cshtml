@model BookDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customer> SignInManager
@{
    ViewData["Title"] = Model.Book.Title;
}

@section Styles {
    <link rel="stylesheet" href="~/css/bookdetails.css" asp-append-version="true" />
}

<!-- Breadcrumb -->
<section class="breadcrumb-section">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">الرئيسية</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Book")">الكتب</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Book.Title</li>
            </ol>
        </nav>
    </div>
</section>

<!-- Book Details Section -->
<section class="book-details-section">
    <div class="container">
        <div class="row">
            <!-- Book Image -->
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="book-image-wrapper">
                    @{
                        var imageUrl = ResolveImageUrl(Model.Book.ImageURL);
                    }
                    <img src="@imageUrl" alt="@Model.Book.Title" class="book-main-image"
                         onerror="this.src='@Url.Content("~/Images/default-book.jpg")'">
                    <div class="book-actions">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <button type="button" class="btn btn-lg @(Model.IsInCart ? "btn-remove-from-cart" : "btn-add-to-cart")" data-book-id="@Model.Book.Id">
                                @if (Model.IsInCart)
                                {
                                    <i class="fas fa-trash"></i>
                                    <span>إزالة من السلة</span>
                                }
                                else
                                {
                                    <i class="fas fa-cart-plus"></i>
                                    <span>أضف إلى السلة</span>
                                }
                            </button>
                        }
                        else
                        {
                            var returnUrl = Context.Request.Path + Context.Request.QueryString;
                            <a href="@Url.Action("Login", "Account", new { ReturnUrl = returnUrl })" class="btn btn-primary btn-lg">
                                <i class="fas fa-sign-in-alt"></i>
                                <span>سجل الدخول للإضافة إلى السلة </span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Book Information -->
            <div class="col-lg-8 col-md-6">
                <div class="book-info-wrapper">
                    <div class="book-header">
                        <h1 class="book-title">@Model.Book.Title</h1>
                        <div class="book-category">
                            <span class="category-badge">@GetCategoryDisplayName(Model.Book.Category)</span>
                        </div>
                    </div>

                    <!-- Authors Section -->
                    @if (Model.Book.Authors != null && Model.Book.Authors.Any())
                    {
                        <div class="authors-section">
                            <h3 class="section-title">
                                <i class="fas fa-user-edit"></i> المؤلفون
                            </h3>
                            <div class="authors-list">
                                @foreach (var author in Model.Book.Authors)
                                {
                                    <div class="author-card">
                                        <div class="author-image">
                                            @{
                                                var authorImageUrl = ResolveImageUrl(author.ImageURL);
                                            }
                                            <img src="@authorImageUrl" alt="@author.Name"
                                                 onerror="this.src='@Url.Content("~/Images/default-author.jpg")'">
                                        </div>
                                        <div class="author-info">
                                            <h4 class="author-name">@author.Name</h4>
                                            <p class="author-about">@author.About</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <!-- Book Meta Information -->
                    <div class="book-meta-section">
                        <div class="meta-item">
                            <i class="fas fa-file-alt"></i>
                            <span class="meta-label">عدد الصفحات:</span>
                            <span class="meta-value">@Model.Book.NumberOfPages صفحة</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-bookmark"></i>
                            <span class="meta-label">التصنيف:</span>
                            <span class="meta-value">@GetCategoryDisplayName(Model.Book.Category)</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-tag"></i>
                            <span class="meta-label">السعر:</span>
                            <span class="meta-value">@Model.Book.Price جنية</span>
                        </div>
                        @if (Model.Book.Comments != null && Model.Book.Comments.Any())
                        {
                            <div class="meta-item">
                                <i class="fas fa-star"></i>
                                <span class="meta-label">التقييم:</span>
                                <div class="rating-display">
                                    <div class="stars">
                                        @{
                                            var averageRating = Model.Book.Comments.Any() ? Model.Book.Comments.Average(c => c.Rate) : 0;
                                        }
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= averageRating ? "filled" : "")"></i>
                                        }
                                    </div>
                                    <span class="rating-text">(@Model.Book.Comments.Count تقييم)</span>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Book Description -->
                    <div class="book-description-section">
                        <h3 class="section-title">
                            <i class="fas fa-align-right"></i> وصف الكتاب
                        </h3>
                        <div class="book-description">
                            <p>@Model.Book.Description</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Comments Section -->
<section class="comments-section">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h3 class="section-title">
                    <i class="fas fa-comments"></i> التعليقات والمراجعات
                    <span class="comments-count">(@(Model.Book.Comments?.Count ?? 0))</span>
                </h3>

                <div class="comments-list" id="commentsList">
                    @if (Model.Book.Comments != null && Model.Book.Comments.Any())
                    {
                        @foreach (var comment in Model.Book.Comments.OrderByDescending(c => c.CreatedAt))
                        {
                            <partial name="_CommentPartial" model="comment" />
                        }
                    }
                    else
                    {
                        <p id="noCommentsMessage" class="text-center text-muted py-4">لا توجد تعليقات حتى الآن. كن أول من يعلق!</p>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add Comment Section -->
<section class="add-comment-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="add-comment-card">
                        <h3 class="section-title">
                            <i class="fas fa-plus-circle"></i> أضف تعليقك
                        </h3>
                        <form id="commentForm" class="comment-form" asp-action="AddComment" asp-route-BookId="@Model.Book.Id" method="post">
                            @Html.AntiForgeryToken()
                            <div class="rating-input">
                                <label class="form-label">تقييمك للكتاب:</label>
                                <div class="star-rating">
                                    <input type="radio" name="Rate" value="5" id="star5">
                                    <label for="star5"><i class="fas fa-star"></i></label>
                                    <input type="radio" name="Rate" value="4" id="star4">
                                    <label for="star4"><i class="fas fa-star"></i></label>
                                    <input type="radio" name="Rate" value="3" id="star3">
                                    <label for="star3"><i class="fas fa-star"></i></label>
                                    <input type="radio" name="Rate" value="2" id="star2">
                                    <label for="star2"><i class="fas fa-star"></i></label>
                                    <input type="radio" name="Rate" value="1" id="star1">
                                    <label for="star1"><i class="fas fa-star"></i></label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="commentText" class="form-label">تعليقك:</label>
                                <textarea class="form-control" id="commentText" name="CommentText" rows="4"
                                          placeholder="شاركنا رأيك في هذا الكتاب..."></textarea>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane"></i> إرسال التعليق
                            </button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="add-comment-card text-center">
                        <h3 class="section-title">
                            <i class="fas fa-plus-circle"></i> أضف تعليقك
                        </h3>
                        <p>يجب عليك تسجيل الدخول لتتمكن من إضافة تعليق.</p>
                        @{
                            var returnUrl = Context.Request.Path + Context.Request.QueryString;
                        }
                            <a href="@Url.Action("Login", "Account", new { ReturnUrl = returnUrl })" class="btn btn-primary">
                            <i class="fas fa-sign-in-alt"></i> تسجيل الدخول للتعليق
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<!-- Related Books Section -->
<section class="related-books-section">
    <div class="container">
        <h3 class="section-title">
            <i class="fas fa-book-open"></i> كتب ذات صلة
        </h3>
        <div class="related-books-grid">
            <div class="row">
                @if (Model.RelatedBooks.Any())
                {
                    @foreach (var book in Model.RelatedBooks)
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                            <a href="@Url.Action("Details", "Book", new { id = book.Id })" class="book-card-link">
                                <div class="book-card h-100">
                                    <div class="book-image-container">
                                        <img src="@ResolveImageUrl(book.ImageURL)" alt="@book.Title" class="book-image" onerror="this.src='@Url.Content("~/Images/default-book.jpg")'">
                                    </div>
                                    <div class="book-info">
                                        <h5 class="related-book-title">@book.Title</h5>
                                        @if (book.Authors != null && book.Authors.Any())
                                        {
                                            <div class="book-authors">
                                                <i class="fas fa-user-edit"></i>
                                                @string.Join("، ", book.Authors.Select(a => a.Name))
                                            </div>
                                        }
                                        <div class="book-price">
                                            <i class="fas fa-tag"></i>
                                            <span>@book.Price جنية</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <p class="text-center text-muted">لا توجد كتب ذات صلة حالياً.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/js/bookdetails.js" asp-append-version="true"></script>
}

@functions {
    private string ResolveImageUrl(string imageUrl)
    {
        if (string.IsNullOrEmpty(imageUrl))
        {
            return Url.Content("~/Images/default-book.jpg");
        }

        if (imageUrl.StartsWith("~/"))
        {
            return Url.Content(imageUrl);
        }

        if (imageUrl.StartsWith("http://") || imageUrl.StartsWith("https://"))
        {
            return imageUrl;
        }

        if (!imageUrl.StartsWith("/"))
        {
            return Url.Content("~/" + imageUrl);
        }

        return imageUrl;
    }

    private string GetCategoryDisplayName(Bookstore.Models.Category category)
    {
        return category switch
        {
            Bookstore.Models.Category.Religious => "الكتب الدينية",
            Bookstore.Models.Category.Literature => "الروايات",
            Bookstore.Models.Category.History => "التاريخ",
            Bookstore.Models.Category.SelfDevelopment => "التنمية الذاتية وعلم النفس",
            Bookstore.Models.Category.Miscellaneous => "كتب متنوعة",
            _ => category.ToString()
        };
    }
}